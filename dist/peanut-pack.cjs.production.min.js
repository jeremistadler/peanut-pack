"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e,t=(e=require("percentile"))&&"object"==typeof e&&"default"in e?e.default:e;function n(e){if(!isFinite(e))return 0;for(var t=1,n=0;Math.round(e*t)/t!==e;)t*=10,n++;return n}function r(e,t,n,r){const l=n-t+1;let s=0,f=r;1===l?f|=4:2===l?f|=8:l<256?(f|=12,s=1):l<65536?(f|=24,s=2):(f|=20,s=4);const i=Buffer.allocUnsafe(s+o(r)*l+1);i.writeUint8(f,0),1===s?i.writeUInt8(l,1):2===s?i.writeUInt16LE(l,1):4===s&&i.writeUInt32LE(l,1);let u=1+s;if(0===r)for(let r=t;r<=n;r++)i.writeInt8(e[r],u),u+=1;else if(32===r)for(let r=t;r<=n;r++)i.writeInt16LE(e[r],u),u+=2;else if(96===r)for(let r=t;r<=n;r++)i.writeInt32LE(e[r],u),u+=4;else if(162===r)for(let r=t;r<=n;r++)i.writeFloatLE(e[r],u),u+=4;else{if(226!==r)throw new Error("Unsupported flags in appendSingleItems "+f.toString(2));for(let r=t;r<=n;r++)i.writeDoubleLE(e[r],u),u+=8}return i}function l(e,t){const n=f(e),r=function(e){return e<=2?0:e<=255?1:e<=65536?2:4}(t);let l=1|n;1===t?l|=4:2===t?l|=8:1===r?l|=12:2===r?l|=24:4===r&&(l|=20);const s=Buffer.allocUnsafe(r+o(n)+1);s.writeUint8(l);let i=1+r;if(1===r?s.writeUInt8(t,1):2===r?s.writeUInt16LE(t,1):4===r&&s.writeUInt32LE(t,1),0===n)s.writeInt8(e,i),i+=1;else if(32===n)s.writeInt16LE(e,i),i+=2;else if(96===n)s.writeInt32LE(e,i),i+=4;else if(162===n)s.writeFloatLE(e,i),i+=4;else{if(226!==n)throw new Error("Unsupported flags in appendRepeatedItems "+l.toString(2));s.writeFloatLE(e,i),i+=8}return s}function s(e){const t=[];if(0===e.length)return new Uint8Array(0);for(let n=0;n<e.length;n++){const s=e[n];if(n===e.length-1){t.push(r(e,n,n,f(s)));break}if(e[n+1]===s){const r=n;for(;n<e.length&&e[n+1]===s;)n++;t.push(l(s,n-r+1))}else{const l=f(s),o=n;for(;n<e.length-1&&e[n+1]!==e[n]&&f(e[n+1])===l;)n++;t.push(r(e,o,n,l))}}const n=Buffer.concat(t);return new Uint8Array(n.buffer,n.byteOffset,n.byteLength)}function o(e){switch(e){case 162:return 4;case 226:return 8;case 0:return 1;case 32:return 2;case 96:return 4}}function f(e){return e<-2147483648||e>2147483647||(0|e)!==e?Math.abs(Math.fround(e)-e)<1e-5?162:226:e>=-127&&e<=127?0:e>=-32767&&e<=32767?32:96}function i(e){const t=[];let n=0;for(let r=0;r<e.length;r++){const l=e[r],s=l-n;n=l,t.push(s)}return t}const u=new Float32Array(1),a=new Uint8Array(u.buffer),c=new Float64Array(1),p=new Uint8Array(c.buffer),h=new Float32Array(1),w=new Uint8Array(h.buffer),d=new Float64Array(1),g=new Uint8Array(d.buffer);function m(){let e=0;return t=>(e=t+e,e)}function*y(e,t){let n=function*(e,t,n){let r=t;for(;r<n;){const t=e[r];r++;const n=28&t;let l=0;if(8===n)l=2;else if(4===n)l=1;else if(12===n)l=e[r],r++;else if(24===n)l=e[r]|e[r+1]<<8,r+=2;else if(20===n)l=(e[r]|e[r+1]<<8|e[r+2]<<16|e[r+3]<<24)>>>0,r+=4;else if(0===t)break;if(1&t)if(t>=226){p[0]=e[r],p[1]=e[r+1],p[2]=e[r+2],p[3]=e[r+3],p[4]=e[r+4],p[5]=e[r+5],p[6]=e[r+6],p[7]=e[r+7],r+=8;const t=c[0];for(let e=0;e<l;e++)yield t}else if(t>=162){a[0]=e[r],a[1]=e[r+1],a[2]=e[r+2],a[3]=e[r+3],r+=4;const t=u[0];for(let e=0;e<l;e++)yield t}else if(t>=96){const t=e[r]+256*e[r+1]+65536*e[r+2]+(e[r+3]<<24);r+=4;for(let e=0;e<l;e++)yield t}else if(t>=32){const t=e[r]+256*e[r+1],n=t|131070*(32768&t);r+=2;for(let e=0;e<l;e++)yield n}else{const t=e[r],n=t|33554430*(128&t);r++;for(let e=0;e<l;e++)yield n}else if(t>=226)for(let t=0;t<l;t++)p[0]=e[r],p[1]=e[r+1],p[2]=e[r+2],p[3]=e[r+3],p[4]=e[r+4],p[5]=e[r+5],p[6]=e[r+6],p[7]=e[r+7],yield c[0],r+=8;else if(t>=162)for(let t=0;t<l;t++)a[0]=e[r],a[1]=e[r+1],a[2]=e[r+2],a[3]=e[r+3],yield u[0],r+=4;else if(t>=96)for(let t=0;t<l;t++)yield e[r]+256*e[r+1]+65536*e[r+2]+(e[r+3]<<24),r+=4;else if(t>=32)for(let t=0;t<l;t++){const t=e[r]+256*e[r+1];yield t|131070*(32768&t),r+=2}else for(let t=0;t<l;t++){const t=e[r];yield t|33554430*(128&t),r++}}}(e,t.headerSize+1,e.length);const r=4==(4&t.flags)?m():null,l=8==(8&t.flags)?m():null;for(const e of n){let n=e;null!==r&&(n=r(n)),null!==l&&(n=l(n)),yield n+t.valueOffset}}function*U(e){throw new Error("Function not implemented.")}exports.compressSerie=function(e){switch(e.type){case"number":return function(e){const r=function(e){const r=new Set(e).size;let l=e[0],s=e[0],o=0;const[f,i,u,a,c]=t([2,5,50,95,98],e);for(let t=0;t<e.length;t++){const r=e[t];l=Math.min(l,r),s=Math.max(s,r),o=Math.max(o,n(r))}return{unique:r,min:l,max:s,count:e.length,maxDecimals:o,p02:f,p05:i,p50:u,p95:a,p98:c}}(e.values),l=r.p50>1?Math.floor(r.p50):0;let o=e.values;l>0&&(o=e.values.map(e=>e-l));const f=function(e){const t=i(e),n=s(t),r=s(i(t)),l=s(e);return r.length<n.length&&r.length<l.length?{data:r,transforms:9}:n.length<l.length?{data:n,transforms:5}:{data:l,transforms:1}}(o),u=s([f.transforms,l,r.count,r.unique,r.maxDecimals,r.min,r.p02,r.p05,r.p50,r.p95,r.p98,r.max]),a=new Uint8Array(u.length+1+f.data.length);return a[0]=u.length,a.set(u,1),a.set(f.data,1+u.length),a}(e);case"string":return function(e){throw new Error("Function not implemented.")}()}},exports.decompressSerieGenerator=function(e){const t=function(e){const t=e[0],[n,r,l,s,o,f,i,u,a,c,p,m]=function(e,t,n){const r=[];let l=1;const s=(t,n)=>{if(t>=226)for(let t=0;t<n;t++)g[0]=e[l],g[1]=e[l+1],g[2]=e[l+2],g[3]=e[l+3],g[4]=e[l+4],g[5]=e[l+5],g[6]=e[l+6],g[7]=e[l+7],r.push(d[0]),l+=8;else if(t>=162)for(let t=0;t<n;t++)w[0]=e[l],w[1]=e[l+1],w[2]=e[l+2],w[3]=e[l+3],r.push(h[0]),l+=4;else if(t>=96)for(let t=0;t<n;t++)r.push(e[l]+256*e[l+1]+65536*e[l+2]+(e[l+3]<<24)),l+=4;else if(t>=32)for(let t=0;t<n;t++){const t=e[l]+256*e[l+1];r.push(t|131070*(32768&t)),l+=2}else for(let t=0;t<n;t++){const t=e[l];r.push(t|33554430*(128&t)),l++}},o=(t,n)=>{if(t>=226){g[0]=e[l],g[1]=e[l+1],g[2]=e[l+2],g[3]=e[l+3],g[4]=e[l+4],g[5]=e[l+5],g[6]=e[l+6],g[7]=e[l+7],l+=8;const t=d[0];for(let e=0;e<n;e++)r.push(t)}else if(t>=162){w[0]=e[l],w[1]=e[l+1],w[2]=e[l+2],w[3]=e[l+3],l+=4;const t=h[0];for(let e=0;e<n;e++)r.push(t)}else if(t>=96){const t=e[l]+256*e[l+1]+65536*e[l+2]+(e[l+3]<<24);l+=4;for(let e=0;e<n;e++)r.push(t)}else if(t>=32){const t=e[l]+256*e[l+1],s=t|131070*(32768&t);l+=2;for(let e=0;e<n;e++)r.push(s)}else{const t=e[l],s=t|33554430*(128&t);l++;for(let e=0;e<n;e++)r.push(s)}};for(;l<n;){const t=e[l];l++;const n=28&t;let r=0;if(8===n)r=2;else if(4===n)r=1;else if(12===n)r=e[l],l++;else if(24===n)r=e[l]|e[l+1]<<8,l+=2;else if(20===n)r=(e[l]|e[l+1]<<8|e[l+2]<<16|e[l+3]<<24)>>>0,l+=4;else if(0===t)break;1&t?o(t,r):s(t,r)}return r}(e,0,t+1);return{valueOffset:r,headerSize:t,flags:n,count:l,unique:s,maxDecimals:o,min:f,max:m,p02:i,p05:u,p50:a,p95:c,p98:p}}(e);return{stats:t,values:128&t.flags?U():y(e,t)}};
//# sourceMappingURL=peanut-pack.cjs.production.min.js.map
